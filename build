#!/bin/bash
# Builds the core ni image from the files in src/.
cd $(dirname $0)

boot_image() {
  cat src/boot \
      src/lib/behavior \
      src/lib/class \
      src/lib/fn \
      src/lib/image \
      src/lib/main
}

boot_build() {
  boot_image > ni0

  echo "initially $(wc -c < ni0) bytes"
  perl ni0 --internal/image > ni && cp ni ni0 || exit $?
  echo "       >> $(wc -c < ni0) bytes"
  perl ni0 --internal/image > ni || exit $?
  echo "       >> $(wc -c < ni) bytes"

  if [[ "$(<ni0)" != "$(<ni)" ]]; then
    echo 'ni is unstable under replication; diff in ni.diff'
    [[ -n "$(<ni0)" ]] && [[ -n "$(<ni)" ]] \
      && diff -C 3 ni0 ni > ni.diff
    exit 1
  else
    rm ni0
  fi

  chmod 755 ni
}

case $1 in
boot)
  boot_image > ni0
  ;;

boot-nd)
  boot_image > ni0
  ni nE2 p'`perl ni0 --internal/image`' p's/\$\w+/\$/gr' gcrp'a%100'
  ;;

bench)
  boot_build
  seq 10 | xargs -n1 -I{} echo > /dev/null

  ni_startups=20
  start_nanos=$(date +%s%N)
  seq $ni_startups | xargs -n1 -I{} ./ni //ni > /dev/null
  end_nanos=$(date +%s%N)

  echo "$(wc -c < ni) bytes after rewriting" >&2
  echo "$(( (end_nanos - start_nanos) / (ni_startups * 1000) ))Î¼s overhead" >&2
  ;;

*)
  boot_build
  ;;
esac
