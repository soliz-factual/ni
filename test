#!/bin/bash
cd $(dirname $0)

# TODO: with the new testing setup, we should just drop hadoop/spark images
# into this list and have ni feature-test to run when applicable.
envs=( alpine
       centos-5
       centos-6
       debian-wheezy
       ubuntu-12.04
       ubuntu-14.04
       ubuntu-16.04
       ubuntu-16.04-p3
       ubuntu-16.10 )

if [[ $1 == '-o' ]] || [[ $1 == '--only' ]]; then
  test_set=$2
  shift 2
fi

build_ni_stuff() { ./build; }

image() { docker build -q -f env/$1 -t ni/env-$1 .; }

default_image=ubuntu-16.04

docker_dind="-v /var/run/docker.sock:/var/run/docker.sock --privileged"
docker_magic="--security-opt=seccomp=unconfined"
docker_opts="$docker_magic $docker_dind -i -m 256M --rm -v $PWD:/data:ro"

build_docker_images() {
  for e; do
    echo
    echo "BUILDING $e"
    echo
    docker build -f env/$e -t ni/env-$e .
  done
}

run_docker_tests() {
  for env; do
    echo
    echo "TESTING $env"
    echo
    docker run $docker_opts --name ni-test $(image $env) \
      /usr/bin/ni --internal/test
  done
}

c=$1
shift
case $c in
-b|--build)
  build_docker_images ${envs[@]}
  ;;

-r|--repl)
  echo "NOTE: to run tests, cd /tmp && bash /data/dev/tests.sh"
  build_ni_stuff
  docker run $docker_opts -t --name ni-test-repl $(image ${1:-$default_image}) /bin/bash
  ;;

-q|--quick)
  build_docker_images $@
  build_ni_stuff
  run_docker_tests $@
  ;;

*)
  build_docker_images ${envs[@]}
  build_ni_stuff
  run_docker_tests ${envs[@]}
  ;;
esac
