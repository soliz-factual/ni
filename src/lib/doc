ni::module->new(name         => '/lib/doc',
                dependencies => ['ni.slice:ni::slice/documentation_meta',
                                 'ni.slice:ni::class/undocumented_instances']);

ni::slice->new(name => 'ni::named/documentable',
               code => <<'_');
sub document {push @{shift->{documentation} ||= []}, @_}
sub documentation {@{shift->{documentation}}}
_

ni::slice->new(name         => 'ni::slice/documentation_meta',
               dependencies => ['ni.class:ni::documentation'],
               code         => <<'_');
# TODO
_

ni::class->new(name         => 'ni::documentation',
               isa          => ['ni::persistent_object'],
               dependencies => ['ni.slice:ni::named/documentable'],
               code         => <<'_');
sub init {
  my $self = shift;
  ni::c($self->{name})->document($self);
}
sub document {die "ni: cannot document a documentation object"}
sub documentation {shift}
_
