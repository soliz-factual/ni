ni('ni:/c/ni')->def(
  run => fn q{
    my $self = shift;
    shift, exit $self->$1(@_) if $_[0] =~ /^--(.*)$/ && $self->can($1);
    exit $self->default(@_);
  },

  'internal/eval' => fn q{
    my $self = shift;
    for (@_) {
      my $r = ni::eval($_);
      print $@ ? "ERROR $@\n" : "$r\n";
    }
    0;
  },

  'internal/image' => fn q{
    my $self = shift;
    my $q = ni('ni:/c/image')->new
      ->partial_image('ni:/c/ni', 'ni:/c/image');
    $q->write(\*STDOUT);
    0;
  });
